---
import type { PortfolioEntry } from "@/types";

interface Props {
  entry: PortfolioEntry;
}

const { entry } = Astro.props;
const { skills } = entry.data;
---

{
  skills && skills.length > 0 && (
    <section class="section-sm container">
      <div class="row justify-center">
        <div class="col-12">
          <div class="text-center mb-12">
            <h2 class="text-3xl lg:text-4xl font-bold text-txt-h dark:text-darkmode-txt-h mb-4">
              Technical Skills
            </h2>
            <p class="text-lg text-txt-p dark:text-darkmode-txt-p">
              Technologies and tools I work with
            </p>
          </div>

          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {skills.map((skillCategory) => (
              <div class="glass rounded-lg p-6 hover:scale-105 transition-transform duration-300">
                <h3 class="text-xl font-semibold text-txt-h dark:text-darkmode-txt-h mb-4 text-center">
                  {skillCategory.category}
                </h3>
                <div class="flex flex-wrap gap-2 justify-center">
                  {skillCategory.technologies.map((tech) => (
                    <span
                      class="glass-t px-3 py-1 rounded-full text-sm text-txt-p dark:text-darkmode-txt-p 
                               hover:bg-gradient-to-r hover:from-blue-500 hover:to-purple-600 
                               hover:text-white transition-all duration-300 cursor-default"
                    >
                      {tech}
                    </span>
                  ))}
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>
    </section>
  )
}

<style>
  .glass-t {
    @apply border border-white/20 bg-white/10 backdrop-blur-sm dark:border-gray-600/30 dark:bg-gray-800/20;
  }
</style>
